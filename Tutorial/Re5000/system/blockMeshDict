/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1e-3;

radius 2.5;

xmin 0.0;
xmax 50.0;

ymax #eval{ $radius };
ymin #eval{ -1*$ymax };

zmin 0.0;
zmax 1;//0.02;

gy          (
              (0.01 0.15 10)    // 10% y-dir, 15% cells, expansion = 10
              (0.49 0.35 11)
              (0.49 0.35 0.090909)
              (0.01 0.15 0.1) // 10% y-dir, 15% cells, expansion = 0.1
            ) ;

/*(
	(0.5 0.5 50)
	(0.5 0.5 0.02)
   );*/

vertices
(
    ($xmin  $ymin  $zmin) //0
    ($xmax  $ymin  $zmin) //1
    ($xmax  $ymax  $zmin) //2
    ($xmin  $ymax  $zmin) //3
    ($xmin  $ymin  $zmax) //4
    ($xmax  $ymin  $zmax) //5
    ($xmax  $ymax  $zmax) //6
    ($xmin  $ymax  $zmax) //7
);

xcells  #eval{ 1*($xmax-$xmin) };
ycells  #eval{ 25*($ymax-$ymin) };
zcells 1;

yedgeMax    10;
yedgeMin    0.1;

zedgeMax    10;
zedgeMin    0.1;

blocks
(
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading
    (
    1
    $gy
    1
    )
);

edges
(
);

boundary
(
    inlet
    {
        type cyclicAMI;//cyclic
        transform       translational;
        neighbourPatch  outlet;
        separationVector ( 50e-3 0 0 );//( 1.0 0 0 );
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type cyclicAMI;//cyclic
        transform       translational;
        neighbourPatch  inlet;
        separationVector ( -50e-3 0 0 );// ( -1.0 0 0 );
        faces
        (
            (1 2 6 5)
        );
    }
    wall_cathode
    {
        type wall;
        faces
        (
			(0 1 5 4)
			
        );
    }
    walls
    {
        type wall;
        faces
        (
		(2 3 7 6)	
        );
    }
    
    frontAndBack
    {
        type empty;
        faces
        (
			(0 3 2 1)
			(4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
